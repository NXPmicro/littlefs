# yaml-language-server: $schema=../../../bin/generator/sdk_generator/data/sdk_data_schema/v3/software_set_and_project_schema.json

__hierarchy__:
  tmp_demo_app_set:
    section-type: application
    belong_to: set.board.${board}
    contents:
      configuration:
        tools:
          __common__:
            config:
              __common__: {}
              debug:
                cc-define:
                  DEBUG: 
                cx-define:
                  DEBUG: 
          iar:
            config:
              __common__: 
              release: {}
          mdk:
            config:
              release: {}
      modules:
        boardset:
          required: true
          cc-include:
          - path: boards/${board}
            package_path: project-root-path
            project_path: board
          files:
          - source: boards/${board}/board.c
            package_path: project-root-path
            project_path: board
          - source: boards/${board}/board.h
            package_path: project-root-path
            project_path: board
          - source: boards/${board}/clock_config.c
            package_path: project-root-path
            project_path: board
          - source: boards/${board}/clock_config.h
            package_path: project-root-path
            project_path: board
        device_configuration_data:
          required: false
          cc-include:
          - path: boards/${board}
            package_path: project-root-path
            project_path: board
          files:
          - source: boards/${board}/dcd.c
            package_path: project-root-path
            project_path: board
          - source: boards/${board}/dcd.h
            package_path: project-root-path
            project_path: board
        readme:
          files:
          - source: project-root-path/readme.txt
            toolchains: iar mdk mcux armgcc
            project_path: doc
littlefs_shell:
  section-type: application
  belong_to: set.board.${board}
  dependency:
  - driver.port
  - driver.flexspi
  - middleware.littlefs
  - utility.shell
  contents:
    document:
      name: littlefs_shell
      brief: Demonstrates littlefs functionality by commands executed from shell.
      readme:
      - boards/${board}/littlefs_examples/littlefs_shell/board.readme
      - middleware/littlefs/example/littlefs_shell/littlefs_shell.readme
      category: littlefs_examples
    project-root-path: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}
    configuration:
      tools:
        __common__:
          config:
            __common__:
              cc-define:
                LFS_NO_INTRINSICS: 1
                SDK_DEBUGCONSOLE_UART: 
        armgcc:
          config:
            release:
              cc-define:
                LFS_NO_ASSERT: 
            sdram_release:
              cc-define:
                LFS_NO_ASSERT: 
        iar:
          config:
            release:
              cc-define:
                LFS_NO_ASSERT: 
            sdram_release:
              cc-define:
                LFS_NO_ASSERT: 
        mcux:
          config:
            __common__:
              ld-flags:
              - "-lib=newlibnano.nohost"
    modules:
      example:
        required: true
        cc-include:
        - path: boards/${board}/littlefs_examples/littlefs_shell
          package_path: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}
          project_path: board
        - path: middleware/littlefs/example/littlefs_shell
          package_path: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}
          project_path: source
        files:
        - source: middleware/littlefs/example/littlefs_shell/littlefs_shell.c
          merge-to-main: main
          package_path: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}
          project_path: source
        - source: middleware/littlefs/example/littlefs_shell/lfs_mflash.c
          package_path: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}
          project_path: source
        - source: middleware/littlefs/example/littlefs_shell/lfs_mflash.h
          package_path: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}
          project_path: source
        - source: boards/${board}/littlefs_examples/littlefs_shell/pin_mux.c
          package_path: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}
          project_path: board
        - source: boards/${board}/littlefs_examples/littlefs_shell/pin_mux.h
          package_path: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}
          project_path: board
        - source: boards/${board}/littlefs_examples/littlefs_shell/peripherals.c
          package_path: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}
          project_path: board
        - source: boards/${board}/littlefs_examples/littlefs_shell/peripherals.h
          package_path: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}
          project_path: board
      pinset:
        required: true
        cc-include:
        - path: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}
          project_path: "${board}/littlefs_examples/littlefs_shell/${multicore_foldername}"
        files:
        - source: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}/hardware_init.c
          merge-to-main: sub
          project_path: "${board}/littlefs_examples/littlefs_shell/${multicore_foldername}"
        - source: boards/${board}/littlefs_examples/littlefs_shell/${multicore_foldername}/app.h
          merge-to-main: sub
          project_path: "${board}/littlefs_examples/littlefs_shell/${multicore_foldername}"
littlefs_shell_onchip_flash:
  section-type: application
  belong_to: set.board.${board}
  dependency:
  - driver.port
  - driver.flexspi
  - middleware.littlefs
  - utility.shell
  contents:
    document:
      name: littlefs_shell_onchip_flash
      brief: Demonstrates littlefs functionality by commands executed from shell.
      readme:
      - boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/board.readme
      - middleware/littlefs/example/littlefs_shell/littlefs_shell.readme
      category: littlefs_examples
    project-root-path: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}
    configuration:
      tools:
        __common__:
          config:
            __common__:
              cc-define:
                LFS_NO_INTRINSICS: 1
                SDK_DEBUGCONSOLE_UART: 
        armgcc:
          config:
            release:
              cc-define:
                LFS_NO_ASSERT: 
            sdram_release:
              cc-define:
                LFS_NO_ASSERT: 
        iar:
          config:
            release:
              cc-define:
                LFS_NO_ASSERT: 
            sdram_release:
              cc-define:
                LFS_NO_ASSERT: 
        mcux:
          config:
            __common__:
              ld-flags:
              - "-lib=newlibnano.nohost"
    modules:
      example:
        required: true
        cc-include:
        - path: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash
          package_path: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}
          project_path: board
        - path: middleware/littlefs/example/littlefs_shell
          package_path: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}
          project_path: source
        files:
        - source: middleware/littlefs/example/littlefs_shell/littlefs_shell.c
          merge-to-main: main
          package_path: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}
          project_path: source
        - source: middleware/littlefs/example/littlefs_shell/lfs_mflash.c
          package_path: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}
          project_path: source
        - source: middleware/littlefs/example/littlefs_shell/lfs_mflash.h
          package_path: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}
          project_path: source
        - source: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/pin_mux.c
          package_path: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}
          project_path: board
        - source: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/pin_mux.h
          package_path: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}
          project_path: board
        - source: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/peripherals.c
          package_path: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}
          project_path: board
        - source: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/peripherals.h
          package_path: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}
          project_path: board
      pinset:
        required: true
        cc-include:
        - path: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}
          project_path: "${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}"
        files:
        - source: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}/hardware_init.c
          merge-to-main: sub
          project_path: "${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}"
        - source: boards/${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}/app.h
          merge-to-main: sub
          project_path: "${board}/littlefs_examples/littlefs_shell_onchip_flash/${multicore_foldername}"
